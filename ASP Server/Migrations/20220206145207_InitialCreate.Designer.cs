// <auto-generated />
using System;
using ASP_Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASP_Server.Migrations
{
    [DbContext(typeof(TimetabledbContext))]
    [Migration("20220206145207_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ASP_Server.Models.Classroom", b =>
                {
                    b.Property<int>("IdClassroom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdClassroom");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("ASP_Server.Models.Discipline", b =>
                {
                    b.Property<int>("Iddiscipline")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NameDiscipline")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Iddiscipline");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("ASP_Server.Models.LessonTime", b =>
                {
                    b.Property<int>("IdLessonTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LessonNumber")
                        .HasColumnType("int");

                    b.HasKey("IdLessonTime");

                    b.ToTable("LessonTimes");
                });

            modelBuilder.Entity("ASP_Server.Models.LessonType", b =>
                {
                    b.Property<int>("IdTypeLesson")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("IdTypeLesson");

                    b.ToTable("LessonTypes");
                });

            modelBuilder.Entity("ASP_Server.Models.Professor", b =>
                {
                    b.Property<int>("IdProfessors")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdProfessors");

                    b.ToTable("Professors");
                });

            modelBuilder.Entity("ASP_Server.Models.StudyGroup", b =>
                {
                    b.Property<int>("IdStudyGroups")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NameGroup")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("IdStudyGroups");

                    b.ToTable("StudyGroups");
                });

            modelBuilder.Entity("ASP_Server.Models.Timetable", b =>
                {
                    b.Property<int>("IdSchedule")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ClassroomIdClassroom")
                        .HasColumnType("int");

                    b.Property<int?>("DisciplineIddiscipline")
                        .HasColumnType("int");

                    b.Property<int?>("LessonTimeIdLessonTime")
                        .HasColumnType("int");

                    b.Property<int?>("LessonTypeIdTypeLesson")
                        .HasColumnType("int");

                    b.Property<int?>("ProfessorIdProfessors")
                        .HasColumnType("int");

                    b.Property<int?>("StudyGroupIdStudyGroups")
                        .HasColumnType("int");

                    b.Property<int?>("WeekDayIdDay")
                        .HasColumnType("int");

                    b.Property<int?>("WeekParityIdweekParity")
                        .HasColumnType("int");

                    b.HasKey("IdSchedule");

                    b.HasIndex("ClassroomIdClassroom");

                    b.HasIndex("DisciplineIddiscipline");

                    b.HasIndex("LessonTimeIdLessonTime");

                    b.HasIndex("LessonTypeIdTypeLesson");

                    b.HasIndex("ProfessorIdProfessors");

                    b.HasIndex("StudyGroupIdStudyGroups");

                    b.HasIndex("WeekDayIdDay");

                    b.HasIndex("WeekParityIdweekParity");

                    b.ToTable("Timetables");
                });

            modelBuilder.Entity("ASP_Server.Models.WeekDay", b =>
                {
                    b.Property<int>("IdDay")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("IdDay");

                    b.ToTable("WeekDays");
                });

            modelBuilder.Entity("ASP_Server.Models.WeekParity", b =>
                {
                    b.Property<int>("IdweekParity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Parity")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("IdweekParity");

                    b.ToTable("WeekParities");
                });

            modelBuilder.Entity("ASP_Server.Models.Timetable", b =>
                {
                    b.HasOne("ASP_Server.Models.Classroom", "Classroom")
                        .WithMany()
                        .HasForeignKey("ClassroomIdClassroom");

                    b.HasOne("ASP_Server.Models.Discipline", "Discipline")
                        .WithMany()
                        .HasForeignKey("DisciplineIddiscipline");

                    b.HasOne("ASP_Server.Models.LessonTime", "LessonTime")
                        .WithMany()
                        .HasForeignKey("LessonTimeIdLessonTime");

                    b.HasOne("ASP_Server.Models.LessonType", "LessonType")
                        .WithMany()
                        .HasForeignKey("LessonTypeIdTypeLesson");

                    b.HasOne("ASP_Server.Models.Professor", "Professor")
                        .WithMany()
                        .HasForeignKey("ProfessorIdProfessors");

                    b.HasOne("ASP_Server.Models.StudyGroup", "StudyGroup")
                        .WithMany()
                        .HasForeignKey("StudyGroupIdStudyGroups");

                    b.HasOne("ASP_Server.Models.WeekDay", "WeekDay")
                        .WithMany()
                        .HasForeignKey("WeekDayIdDay");

                    b.HasOne("ASP_Server.Models.WeekParity", "WeekParity")
                        .WithMany()
                        .HasForeignKey("WeekParityIdweekParity");

                    b.Navigation("Classroom");

                    b.Navigation("Discipline");

                    b.Navigation("LessonTime");

                    b.Navigation("LessonType");

                    b.Navigation("Professor");

                    b.Navigation("StudyGroup");

                    b.Navigation("WeekDay");

                    b.Navigation("WeekParity");
                });
#pragma warning restore 612, 618
        }
    }
}
